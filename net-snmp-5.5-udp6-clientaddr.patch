1279501- In IPv6, snmp packet does not send from specified interface assigned by clientaddr option in snmpd.conf

Backported from:

commit a92628a163ebf1ea62220684736300461c003875
Author: Niels Baggesen <nba@users.sourceforge.net>
Date:   Mon Jan 26 20:26:06 2015 +0100

    BUG#a2584: Fix snmptrap to use clientaddr from snmp.conf. Thanks to rizwan

commit 1ee72102fbe722d232d74abc4660a8b134cec8d6
Author: Bart Van Assche <bvanassche@acm.org>
Date:   Sat May 23 07:32:53 2015 +0200

    snmplib, UDPIPv6 transport: Add a missing return statement
....
    Detected by Coverity.

diff -up net-snmp-5.5/snmplib/snmpUDPIPv6Domain.c.ipv6 net-snmp-5.5/snmplib/snmpUDPIPv6Domain.c
--- net-snmp-5.5/snmplib/snmpUDPIPv6Domain.c.ipv6	2015-11-26 14:59:21.940821289 +0100
+++ net-snmp-5.5/snmplib/snmpUDPIPv6Domain.c	2015-11-26 15:05:49.647781135 +0100
@@ -304,6 +304,34 @@ netsnmp_udp6_transport(struct sockaddr_i
         t->data = NULL;
         t->data_length = 0;
     } else {
+        char           *client_socket = NULL;
+        /*
+         * This is a client session.  If we've been given a
+         * client address to send from, then bind to that.
+         * Otherwise the send will use "something sensible".
+         */
+
+        client_socket = netsnmp_ds_get_string(NETSNMP_DS_LIBRARY_ID,
+                                    NETSNMP_DS_LIB_CLIENT_ADDR);
+        if (client_socket) {
+            int uses_port = netsnmp_ds_get_boolean(NETSNMP_DS_LIBRARY_ID,
+                    NETSNMP_DS_LIB_CLIENT_ADDR_USES_PORT);
+            struct sockaddr_in6 client_addr;
+            netsnmp_sockaddr_in6_2(&client_addr, client_socket, NULL);
+            if (uses_port == 0) {
+                client_addr.sin6_port = 0;
+            }
+            rc = bind(t->sock, (struct sockaddr *)&client_addr,
+                              sizeof(struct sockaddr_in6));
+            if ( rc != 0 ) {
+                DEBUGMSGTL(("netsnmp_udp6", "failed to bind for clientaddr: %d %s\n",
+                                 errno, strerror(errno)));
+                netsnmp_udp6_close(t);
+                netsnmp_transport_free(t);
+                return NULL;
+            }
+        }
+
         /*
          * This is a client session.  Save the address in the
          * transport-specific data pointer for later use by netsnmp_udp6_send.
diff -up net-snmp-5.5/snmplib/snmpUDPIPv6Domain.c.test net-snmp-5.5/snmplib/snmpUDPIPv6Domain.c
--- net-snmp-5.5/snmplib/snmpUDPIPv6Domain.c.test	2016-01-18 12:07:08.092204022 +0100
+++ net-snmp-5.5/snmplib/snmpUDPIPv6Domain.c	2016-01-18 12:07:17.256214794 +0100
@@ -93,6 +93,9 @@ static netsnmp_tdomain udp6Domain;
  */
 extern void _netsnmp_udp_sockopt_set(int fd, int server);
 
+int netsnmp_sockaddr_in6_2(struct sockaddr_in6 *addr,
+                       const char *inpeername, const char *default_target);
+
 /*
  * Return a string representing the address in data, or else the "far end"
  * address if data is NULL.  
