1072092 - net-snmp: denial of service flaw in Linux implementation of ICMP-MIB

commit 8407b6ce46ca7159b3c816d1024e20a53f9a1c6c
Author: Wes Hardaker <hardaker@users.sourceforge.net>
Date:   Wed Feb 19 15:21:57 2014 -0800

    bug fix from fenner: fix ICMP mib table handling on linux

diff -up net-snmp-5.5/agent/mibgroup/mibII/icmp.c.icmp net-snmp-5.5/agent/mibgroup/mibII/icmp.c
--- net-snmp-5.5/agent/mibgroup/mibII/icmp.c.icmp	2009-04-05 00:13:55.000000000 +0200
+++ net-snmp-5.5/agent/mibgroup/mibII/icmp.c	2014-03-06 11:34:27.052326617 +0100
@@ -103,10 +103,20 @@ struct icmp_msg_stats_table_entry {
         int flags;
 };
 
+#ifdef linux
+/* Linux keeps track of all possible message types */
+#define ICMP_MSG_STATS_IPV4_COUNT 256
+#else
 #define ICMP_MSG_STATS_IPV4_COUNT 11
+#endif
 
 #ifdef NETSNMP_ENABLE_IPV6
+#ifdef linux
+/* Linux keeps track of all possible message types */
+#define ICMP_MSG_STATS_IPV6_COUNT 256
+#else
 #define ICMP_MSG_STATS_IPV6_COUNT 14
+#endif
 #else
 #define ICMP_MSG_STATS_IPV6_COUNT 0
 #endif /* NETSNMP_ENABLE_IPV6 */
@@ -172,7 +182,7 @@ icmp_msg_stats_load(netsnmp_cache *cache
     inc = 0;
     linux_read_icmp_msg_stat(&v4icmp, &v4icmpmsg, &flag);
     if (flag) {
-        while (254 != k) {
+        while (255 >= k) {
             if (v4icmpmsg.vals[k].InType) {
                 icmp_msg_stats_table[i].ipVer = 1;
                 icmp_msg_stats_table[i].icmpMsgStatsType = k;
@@ -262,7 +272,7 @@ icmp_msg_stats_load(netsnmp_cache *cache
     inc = 0;
     linux_read_icmp6_msg_stat(&v6icmp, &v6icmpmsg, &flag);
     if (flag) {
-        while (254 != k) {
+        while (255 >= k) {
             if (v6icmpmsg.vals[k].InType) {
                 icmp_msg_stats_table[i].ipVer = 2;
                 icmp_msg_stats_table[i].icmpMsgStatsType = k;
@@ -1027,6 +1037,12 @@ icmp_stats_table_handler(netsnmp_mib_han
 					continue;
 				table_info = netsnmp_extract_table_info(request);
 				subid      = table_info->colnum;
+				DEBUGMSGTL(( "mibII/icmpStatsTable", "oid: " ));
+				DEBUGMSGOID(( "mibII/icmpStatsTable", request->requestvb->name,
+						 request->requestvb->name_length ));
+				DEBUGMSG(( "mibII/icmpStatsTable", " In %d InErr %d Out %d OutErr %d\n",
+					      entry->icmpStatsInMsgs, entry->icmpStatsInErrors,
+					      entry->icmpStatsOutMsgs, entry->icmpStatsOutErrors ));
 
 				switch (subid) {
 					case ICMP_STAT_INMSG:
@@ -1092,6 +1108,11 @@ icmp_msg_stats_table_handler(netsnmp_mib
                     continue;
                 table_info = netsnmp_extract_table_info(request);
                 subid = table_info->colnum;
+                DEBUGMSGTL(( "mibII/icmpMsgStatsTable", "oid: " ));
+                DEBUGMSGOID(( "mibII/icmpMsgStatsTable", request->requestvb->name,
+                                 request->requestvb->name_length ));
+                DEBUGMSG(( "mibII/icmpMsgStatsTable", " In %d Out %d Flags 0x%x\n",
+                                 entry->icmpMsgStatsInPkts, entry->icmpMsgStatsOutPkts, entry->flags ));
 
                 switch (subid) {
                     case ICMP_MSG_STAT_IN_PKTS:
diff -up net-snmp-5.5/agent/mibgroup/mibII/kernel_linux.c.icmp net-snmp-5.5/agent/mibgroup/mibII/kernel_linux.c
--- net-snmp-5.5/agent/mibgroup/mibII/kernel_linux.c.icmp	2009-01-19 16:01:42.000000000 +0100
+++ net-snmp-5.5/agent/mibgroup/mibII/kernel_linux.c	2014-03-06 11:36:43.021736311 +0100
@@ -76,9 +76,9 @@ decode_icmp_msg(char *line, char *data,
             index = strtol(token, &delim, 0);
             if (ERANGE == errno) {
                 continue;
-            } else if (index > LONG_MAX) {
+            } else if (index > 255) {
                 continue;
-            } else if (index < LONG_MIN) {
+            } else if (index < 0) {
                 continue;
             }
             if (NULL == (token = strtok_r(dataptr, " ", &saveptr1)))
@@ -89,9 +89,9 @@ decode_icmp_msg(char *line, char *data,
             index = strtol(token, &delim, 0);
             if (ERANGE == errno) {
                 continue;
-            } else if (index > LONG_MAX) {
+            } else if (index > 255) {
                 continue;
-            } else if (index < LONG_MIN) {
+            } else if (index < 0) {
                 continue;
             }
             if(NULL == (token = strtok_r(dataptr, " ", &saveptr1)))
@@ -421,12 +421,20 @@ linux_read_icmp6_parse(struct icmp6_mib
         if (NULL != icmp6msgstat) {
             if (0 == strncmp(name, "Icmp6OutType", 12)) {
+                int type;
                 token = strsep(&vals, "e");
-                icmp6msgstat->vals[atoi(vals)].OutType = stats;
+                type = atoi(vals);
+                if ( type < 0 || type > 255 )
+                    continue;
+                icmp6msgstat->vals[type].OutType = stats;
                 *support = 1;
                 continue;
             } else if (0 == strncmp(name, "Icmp6InType", 11)) {
+                int type;
                 token = strsep(&vals, "e");
-                icmp6msgstat->vals[atoi(vals)].InType = stats;
+                type = atoi(vals);
+                if ( type < 0 || type > 255 )
+                    continue;
+                icmp6msgstat->vals[type].InType = stats;
                 *support = 1;
                 continue;
             }
diff -up net-snmp-5.5/agent/mibgroup/mibII/kernel_linux.h.icmp net-snmp-5.5/agent/mibgroup/mibII/kernel_linux.h
--- net-snmp-5.5/agent/mibgroup/mibII/kernel_linux.h.icmp	2009-01-19 16:01:42.000000000 +0100
+++ net-snmp-5.5/agent/mibgroup/mibII/kernel_linux.h	2014-03-06 11:34:27.052326617 +0100
@@ -121,11 +121,11 @@ struct icmp_msg_mib {
 
 /* Lets use wrapper structures for future expansion */
 struct icmp4_msg_mib {
-    struct icmp_msg_mib vals[255];
+    struct icmp_msg_mib vals[256];
 };
 
 struct icmp6_msg_mib {
-    struct icmp_msg_mib vals[255];
+    struct icmp_msg_mib vals[256];
 };
 
 struct udp_mib {
